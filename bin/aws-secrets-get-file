#!/bin/bash -e

# aws-secrets-get
#   Retrieve an encrypted secrets file from s3 and print it to stdout.

die() {
    echo "$@"
    exit
}

which aws >/dev/null || die "aws-cli not found."

major=`aws --version 2>&1 | awk '{print $1}' | sed 's|aws-cli/1.\([0-9]*\).*$|\1|'`
[ ! -z "$major" ] && [ $major -lt 8 ] && die "aws-cli version needs to be >= 1.8."

app=$1
ver=$2
remote_secrets_file=$3
env=$4
base=$5

usage="Usage: $0 <app> <version> <remote file> <env> <base>"

[ -z "$app" ] && die "Missing app name. $usage";
[ -z "$ver" ] && die "Missing file version. $usage";
[ -z "$remote_secrets_file" ] && die "Missing remote secret file name. $usage";
[ -z "$env" ] && die "Missing environment. $usage";
[ -z "$base" ] && die "Missing base name. $usage";

s3_bucket=$base-secrets
s3_key=$app/$env/$remote_secrets_file

if [ "$ver" = "current" ]; then
  get_version=""
else
  get_version="--version-id $ver"
fi

tmp=`mktemp -d 2>/dev/null || mktemp -d -t 'astmpdir'`

aws s3api get-object --bucket $s3_bucket --key $s3_key $get_version $tmp/out > /tmp/errs

aws kms decrypt --ciphertext-blob fileb://$tmp/out --output text --query Plaintext | python -m base64 -d

rm -rf $tmp
