#!/bin/bash -e

# aws-secrets-purge-resources
#
# Purges a set of AWS resources no longer needed to manage secret keys
#
die() {
    echo "$@"
    exit
}

which aws >/dev/null || die "aws-cli not found."

major=`aws --version 2>&1 | awk '{print $1}' | sed 's|aws-cli/1.\([0-9]*\).*$|\1|'`
[ ! -z "$major" ] && [ $major -lt 8 ] && die "aws-cli version needs to be >= 1.8."

base=$AWS_SECRETS_BASE
[ -z "$base" ] && base=$1
[ -z "$base" ] && die "Usage: $0 <?base name> or set AWS_SECRETS_BASE"
[[ "$base" =~ ^[a-z0-9_]+$ ]] || die "The base name should consist only of a-z, 0-9 or _ charaters."

echo "Purging resources for $base.";

alias=$base-secrets
bucket=$base-secrets
instancerole=$base-secrets-instances
instance_access_policy=$base-s3-read-secrets
instance_decrypt_policy=$base-s3-decrypt-secrets
instanceprofile=$base-secrets
group=$base-manage-secrets
group_policy=$base-secrets-s3-read-write
group_encrypt_policy=$base-encrypt-secrets

echo "Deleting group policies: $group_policy, $group_encrypt_policy"
aws iam delete-group-policy --group-name $group --policy-name=$group_policy
aws iam delete-group-policy --group-name $group --policy-name=$group_encrypt_policy

users=`aws iam get-group --group-name $group --query 'Users[*].UserName' --output text`
for u in $users; do
    echo "removing $u from group $group"
    aws iam remove-user-from-group --user-name $u --group-name $group
done

echo "Deleting group $group"
aws iam delete-group --group-name $group

echo "Deleting role policies: $instance_access_policy, $instance_decrypt_policy"
aws iam delete-role-policy --role-name $instancerole --policy-name=$instance_access_policy
aws iam delete-role-policy --role-name $instancerole --policy-name=$instance_decrypt_policy

echo "Removing roles from instance profile: $instancerole"
aws iam remove-role-from-instance-profile --instance-profile-name $instanceprofile --role-name $instancerole

echo "Deleting instance profile: $instanceprofile"
aws iam delete-instance-profile --instance-profile-name $instanceprofile

echo "Deleting role: $instancerole"
aws iam delete-role --role-name $instancerole

echo "Deleting bucket: $bucket"
# TODO: could do something else here
# like list and delete all the objects and versions, then delete the bucket
# aws s3api delete-object --bucket $bucket --key $s3_key
aws s3api delete-bucket --bucket $bucket

key_id=`aws kms list-aliases --query "Aliases[?AliasName == 'alias/$alias'] | [0].TargetKeyId" --output text`
echo "Scheduling key deletion: alias: $alias, key: $key_id"
aws kms schedule-key-deletion --key-id $key_id --pending-window-in-days 7

echo "Deleting Key alias: $alias"
aws kms delete-alias --alias-name "alias/$alias"
